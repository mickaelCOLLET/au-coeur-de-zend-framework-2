<div class="row">
    <?php echo $this->render('bloc/book'); ?>
    <div class="span7">
    	<h2>Table des matières</h2>
        <div>
            <p><strong>Chapitre 1.</strong> Introduction au Zend Framework 2, avec un petit historique sur la première version du framework. Ce chapitre permet de voir les différentes améliorations apportées au Zend Framework 2, ainsi que les conditions requises afin de l'exploiter au mieux.</p>
            <p><strong>Chapitre 2.</strong> Présentation des autoloaders existants dans le framework, avec des exemples d'utilisation et l'explication de leur comportement en détails.</p>
            <p><strong>Chapitre 3.</strong> Etude du gestionnaire d'évènements et l'implémentation de la programmation évènementielle au sein du Zend Framework.</p>
            <p><strong>Chapitre 4.</strong> Présentation du composant d'injection de dépendance qui permet aux développeurs de trouver ici les bonnes pratiques de programmation en découplant chaque objet et supprimant les dépendances dans le code.</p>
            <p><strong>Chapitre 5.</strong> Ce chapitre aborde le gestionnaire de services, nouveau composant du framework, responsable de la fabrication des objets du framework. Le gestionnaire peut être utilisé en complément du composant d'injection de dépendances.</p>
            <p><strong>Chapitre 6.</strong> Présentation du fonctionnement des modules, une des autres nouveautés du framework qui utilise les modules comme des briques individuelles prêtes à intégrer dans presque n'importe quel projet.</p>
            <p><strong>Chapitre 7.</strong> Ce chapitre fait le point sur les configurations, notamment sur leur fonctionnement général ainsi que sur l'utilisation de celles-ci pour chacun de nos modules.</p>
            <p><strong>Chapitre 8.</strong> Présentation du router, son optimisation et les différentes types de routes existantes.</p>
            <p><strong>Chapitre 9.</strong> Les contrôleurs seront abordés dans ce chapitre qui détail le processus de dispatch au sein du contrôleur, ainsi que la possibilité de dispatcher n'importe quel contrôleur au cours de nos actions.</p>
            <p><strong>Chapitre 10.</strong> Ce chapitre nous propose de comprendre comment ont été refactorisées les aides d'action du framework. Plus performantes et plus simples à comprendre, les aides d'actions sont maintenant plus efficaces.</p>
            <p><strong>Chapitre 11.</strong> Les gestionnaires de plugin seront présentés dans ce chapitre, ce qui nous permet de comprendre le fonctionnement du chargement et de la gestion des instances de nos plugins.</p>
            <p><strong>Chapitre 12.</strong> Présentation des vues, de leurs types et du fonctionnement de leurs rendus. Un gros travail de réécriture a été effectué par l'équipe du Zend Framework sur le mécanisme de rendu des vues.</p>
            <p><strong>Chapitre 13.</strong> Les aides de vues et leurs optimisations seront présentés dans ce chapitre.</p>
            <p><strong>Chapitre 14.</strong> Le coeur du patron d'architecture MVC du framework est étudié dans ce chapitre avec l'explication de nos points d'entrés et le processus de lancement de l'application.</p>
            <p><strong>Chapitre 15.</strong> Plusieurs composants importants (base de données, formulaires, email, cryptage, etc.) sont détaillés dans cette section afin d'en maitriser leur utilisation.</p>
            <p><strong>Chapitre 16.</strong> Présentation du nouveau système de gestion des types d'exceptions au sein du framework.</p>
            <p><strong>Chapitre 17.</strong> Ce chapitre porte sur l'étude d'un cas d'utilisation afin de nous permettre la mise en application tout ce que l'on a pu voir au sein des chapitres précédents.</p>
            <p><strong>Chapitre 18.</strong> Présente en détails les étapes afin de pouvoir contribuer au Zend Framework : correction de bug, création de fonctionnalité, suivi du planning, etc.</p>
        </div>
    </div>
</div>